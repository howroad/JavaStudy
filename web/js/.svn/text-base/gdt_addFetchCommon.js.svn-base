/**
 *  只能是 新增融资提款登记，申请 使用此js
 */
/**
 * 提款申请录入js
 */
//flag =0 标识页面初次加载，=1 表示不是初次加载
var flag=0;
var isFirstLoad = 0; //是否是第一次加载 0 是 1 不是
var lastRateAdjustType;//上一次利率调整方式
$(function (){
	
	//m=v模式下显示申请日志
	var div = $("div[id$='_log']")[0];
	if(div != undefined && div != null){
		div.style.display = 'none';
	}
	var m = $('[id="m"]').val();
	if(m!=null && m=='v' && div != undefined && div != null){
		div.style.display = '';
		$("span[id$='gdt_log.titleId']").html("操作日志");
	}
	//动态显示授信品种
	var bussClass;
	var bussVariety;
	if (m == 'v') {
		$('font').html('');
		bussClass = $("input[id$='_con.bussClass']").get(0);
		bussVariety = $("input[id$='_con.bussVariety']");
	} else {
		bussClass = $("select[id$='_con.bussClass']").get(0);
		bussVariety = $("select[id$='_con.bussVariety']");
	}
	var bussVarietyValue = bussVariety.val();
	queryBussVaresForFetchMoney(bussClass, '');
	var bussVarietyArr = $("[id$='_con.bussVariety'] option");
	if (bussVarietyArr.eq(0).val() == '') {
		bussVarietyArr.eq(0).remove();
	}
	if (bussVarietyValue != '') {
		/*bussVariety.val(bussVarietyValue);*/
		bussVariety.attr('value',bussVarietyValue);
	}
	if(bussVarietyValue!='CLMS35'&&bussVarietyValue!='CLMS23'){
		$("[id$='_f.payInterestType'] option[value='11']").remove();
	}
	//隐藏：维护还款计划
	$("a[id='gdt_ledgerPlan_drawings.el_14']").each(function(){
		var tr = $(this).parents("tr").first();
		var fetchNo = tr.find("input[id$='.fetchNo']").val();
		if (fetchNo == '') {
			$(this).hide();
		}
	});
	
	//如果合同信息不为空，则合同信息不可以修改
//	var contractId = $("input[id$='_con.contractId']").val();
//	if (contractId != '' && contractId != null) {
//		$("[id$='_con.bussClass']").attr('disabled','true');
//		$("[id$='_con.bussVariety']").attr('disabled','true');
//	}
	var fmId = $("input[id$='fmId']").val();
	//如果是修改界面和查看界面，不需要根据币种和金融机构设置利率等信息。
	if (m != 'v') {
		if ( fmId == '' || fmId == null || fmId == undefined) {
			//金融机构和币种初始化
			if ($("[id$='_amt.assBankId']").length > 1) {
				var assBankId = $("[id$='_amt.assBankId']")[0].value;
				var currencyNo = $("[id$='_amt.currencyNo']")[0].value;
				$("[id$='_f.assBankId']").val(assBankId);
				//$("[id$='_f.currencyNo']").val(currencyNo);
				$("select[id$='_f.currencyNo']").attr('value',currencyNo);				
				setContractAmt(currencyNo,assBankId);
			}
		}
	}
	//如果是修改界面，则合同编号不能再次修改
	
	if (fmId != '' && fmId != null && fmId != undefined) {
		$("input[id$='_con.contractNo']").attr('disabled','true');
//		var assBankId = $("[id$='_f.assBankId']").val();
//		var currencyNo = $("[id$='_f.currencyNo']").val();
//		setContractAmt(currencyNo,assBankId);
		var rateTermKindTemp=$("[id$='_f.rateTermKind']").val();
		setRateKindSelectOptionsForFetch(rateTermKindTemp);
	}
	initFetchRegisterForByVariety(bussVarietyValue);
	//利率调整方式
	changeRateAdjustType($("[id$='_f.rateAdjustType']")[0]);
	//付息方式
	
	showPayInterestOther($("[id$='_f.payInterestType']")[0]);
	//还本方式
	setRepaymentInfo($("[id$='_f.rePaymentType']")[0]);
	//付息日期
	
	setPayInterestDay($("[id$='payInterestDateType']")[0]);
	hideAssBank();
//	if(m=="v"){
//		showAsText($('input[id$="_f.baseRate"]'));
//	}
	flag = 1;
	isFirstLoad = 1;
	
	//setRateKindSelectOptionsForFetch();
});
var str; 
//放还款计划管理
function changeFetchRegisterForByVariety(obj) {
	hideAssBank();
	initFetchRegisterForByVariety(obj.value);
	changePayInterestTypeOption(obj.value);
}
function hideAssBank(){
	var bussVariety = $("[id$='.bussVariety']");
	var bussVarietyValue = bussVariety.val();
	var $bankMark = $("#bankMark");
	if(bussVarietyValue=='CLMS02'){
		$bankMark.hide();
	}
	else{
		$bankMark.show();
	}
	if (bussVarietyValue == 'CLMS02' || bussVarietyValue == 'CLMS28' || bussVarietyValue == 'CLMS30'
		 || bussVarietyValue == 'CLMS36') {//|| bussVarietyValue == 'CLMS26'
		$("[id$='_f.assBankId']").removeAttr('validate').hide();
	} else {
		$("[id$='_f.assBankId']").attr('validate', 'require|').show();
	}
	
}
function initFetchRegisterForByVariety(variety) {
	//债券发行、融资租赁、资产证券化、基金、票据贴现、产业基金
	if(variety == 'CLMS02' || variety == 'CLMS26' || variety == 'CLMS28' || 
			variety == 'CLMS30'|| variety == 'CLMS11'|| variety == 'CLMS36'){
		/**
		 * 无需录入利率调整方式、频率、利率调整生效日、付息方式、还本方式等信息
		 */
		$("[id$='_f.executeRate']").removeAttr('validate').val('').hide();
		$("[id$='_f.baseRate']").removeAttr('validate').val('').hide();
		$("[id$='_f.floatValue']").removeAttr('validate').val('').hide(); 
		$("[id$='_f.payInterestDate']").removeAttr('validate').val('').hide(); 
		$("[id$='_f.rePaymentDate']").removeAttr('validate').val('').hide();
		$("[id$='_f.payInterestTypeOther']").removeAttr('validate').val('').hide(); 
		$("[id$='_f.rateEffectiveDay']").removeAttr('validate').val('').hide(); 
		$("[id$='_f.rateEffectiveDayType']").removeAttr('validate').val('').hide();
		$("[id$='_f.floatType']").removeAttr('validate').val('').hide();
		$("[id$='_f.rateAdjustFrequency']").removeAttr('validate').val('').hide();
		
		$("[id$='_f.rateAdjustType']").removeAttr('validate').val('').hide();
		$("[id$='_f.payInterestDateType']").removeAttr('validate').val('').hide();
		$("[id$='_f.rePaymentType']").removeAttr('validate').val('').hide();
		$("[id$='_f.rePaymentDateType']").removeAttr('validate').val('').hide();
		$("[id$='_f.payInterestType']").removeAttr('validate').val('').hide();
		$("[id$='_f.rePaymentTypeFrequency']").removeAttr('validate').val('').hide();
		
		
		var rateAdjustTypePtr = $("[id$='_f.rateAdjustType']").parents("tr").first();
		rateAdjustTypePtr.hide();
		var rateEffectiveDayTypePtr = $("[id$='_f.rateEffectiveDayType']").parents("tr").first();
		rateEffectiveDayTypePtr.hide();
		var floatTypePtr = $("[id$='_f.floatType']").parents("tr").first();
		floatTypePtr.hide();
		var payInterestTypePtr = $("[id$='_f.payInterestType']").parents("tr").first();
		payInterestTypePtr.hide();
		var rePaymentTypePtr = $("[id$='_f.rePaymentType']").parents("tr").first();
		rePaymentTypePtr.hide();
	} else {
		$("select[id$='_f.rateAdjustFrequency']").attr('validate', 'require|').show();
		$("input[id$='_f.executeRate']").attr('validate', 'require|').attr('readonly','readonly');
		$("select[id$='_f.rateAdjustType']").attr('validate', 'require|').show();
		$("select[id$='_f.payInterestType']").attr('validate', 'require|').show();
		$("select[id$='_f.rePaymentType']").attr('validate', 'require|').show();
		$("select[id$='_f.rePaymentTypeFrequency']").attr('validate', 'require|').show();
		
		var rateAdjustTypePtr = $("select[id$='_f.rateAdjustType']").parents("tr").first();
		rateAdjustTypePtr.show();
		var rateEffectiveDayTypePtr = $("select[id$='_f.rateEffectiveDayType']").parents("tr").first();
		rateEffectiveDayTypePtr.show();
		var floatTypePtr = $("select[id$='_f.floatType']").parents("tr").first();
		floatTypePtr.show();
		var payInterestTypePtr = $("select[id$='_f.payInterestType']").parents("tr").first();
		payInterestTypePtr.show();
		var rePaymentTypePtr = $("select[id$='_f.rePaymentType']").parents("tr").first();
		rePaymentTypePtr.show();
	}
	if(variety=='CLMS28'){
		$("table[id$=gdt_addGdebitFetchApply_pro] :input" ).attr("disabled","");
		$("table[id$=gdt_addGdebitFetchApply_pro]").show();
		$("[id$='_f.fetchtAmount']").attr('readonly','true');
		
		$("table[id$=gdt_addFetchMoneyReg_pro] :input" ).attr("disabled","");
		$("table[id$=gdt_addFetchMoneyReg_pro]").show();
		$("[id$='_f.arriAcntAmount']").attr('readonly','true');
	}else{
		$("table[id$=gdt_addGdebitFetchApply_pro]").hide();
		$("table[id$=gdt_addGdebitFetchApply_pro] :input" ).attr("disabled","disabled");
		$("[id$='_f.fetchtAmount']").removeAttr('readonly');
		
		$("table[id$=gdt_addFetchMoneyReg_pro]").hide();
		$("table[id$=gdt_addFetchMoneyReg_pro] :input" ).attr("disabled","disabled");
		$("[id$='_f.arriAcntAmount']").removeAttr('readonly');
	}
	if(variety=='CLMS02'){
		var termMarks = $("[id$='_f.termMarks']").parents("tr").first();
		termMarks.show();
	}else{
		var termMarks = $("[id$='_f.termMarks']").parents("tr").first();
		termMarks.hide();
	}
}
function queryBussVares4Plan(obj) {
	queryBussVares(obj, '')
	var bussVariety = $("select[id$='_con.bussVariety'] option");
	if (bussVariety.eq(0).val() == '') {
		bussVariety.eq(0).remove();
	}
}

//选择合同
function selectContract() {
	str = $("input[id$='formName']").val();
	var bussClass = $("select[id='"+str+".bussClass']").val();
	var bussVariety = $("select[id='"+str+".bussVariety']").val();
	
	var url = "GDEBIT@gdt_selectCon4Plan.sf?bussClass=" + bussClass 
		+ "&bussVariety=" + bussVariety + "&busFlag=fetchMoney";
	openwin(url, '合同列表', 1000, 500);
}
//回写合同信息
function setContractInfo(data) {
	str = $("input[id$='formName']").val();
	$("select[id='"+str+".bussClass']").val(data.bussClass);
	var bussClass = $("select[id$='_con.bussClass']").get(0);
	queryBussVares(bussClass, '');

	$("select[id='"+str+".bussVariety']").val(data.bussVariety);
	$("[id='"+str+".variety']").val(data.bussVariety);
	$("input[id='"+str+".contractNo']").val(data.contractNo);
	$("input[id='"+str+".contractId']").val(data.contractId);
	
	setInfo4Span(""+str+".cltName", data.cltName, data.cltName);
	//setInfo4Span(""+str+".startDate", data.startDate, data.startDate);
	//setInfo4Span(""+str+".endDate", data.endDate, data.endDate);
	var obj = $("input[id='"+str+".refresh']")[0];
	smartForm_doRefresh(obj);
}

function setInfo4Span(id, inputValue, spanValue) {
	var obj = $("input[id='" + id + "']");
	obj.val(inputValue);
	obj.parent().html(spanValue).append(obj);
}

//新增行【0提款；3费用】
function addRow(obj, flag) {
	var contractId = $("input[id='gdt_ledgerPlan_conInfo.contractId']").val();
	if (contractId == '') {
		alert("请先选择合同");
		return;
	}
	
	var tr_row = smartForm_add(obj);
	var tr = $(tr_row);
	
	//合作金融网点、币种
	var assBankIds = tr.find("select[id$='.assBankId']");
	if (assBankIds.length > 1) {
		
	}
	
	if (flag == '0') {//提款计划
		addDrawings(tr);
	} else {//费用
		addFees(tr);
	}
}

//新增：提款计划
function addDrawings(tr) {
	var TK_NO = querySerialNumber('TK_PLAN');//计划ID
	setInfo4InputAndSpan(tr, 'planNo', TK_NO, TK_NO);
	//隐藏：维护还款计划
	tr.find("a[id$='.el_14']").hide();
}

//新增：费用计划
function addFees(tr) {
	var FY_NO = querySerialNumber('FY');//计划ID
	setInfo4InputAndSpan(tr, 'planNo', FY_NO, FY_NO);
}

//删除【0提款；3费用】
function delLedgerPlan(obj, flag) {
	var planList;
	if (flag == '0') {
		planList = $("input[id='gdt_ledgerPlan_drawings._check']:checked");
	} else {
		planList = $("input[id='gdt_ledgerPlan_fees._check']:checked");
	}
	if (planList.length < 1) {
		alert("至少勾选一条数据");
		return;
	}
	
	$("input[id='gdt_ledgerPlan_conInfo.operation']").val(flag);
	smartForm_doDelete(obj);
}

//还款计划
function addLedgerPlan4Repay(obj) {
	var tr = $(obj).parents("tr").first();
	var planId = tr.find("input[id$='.planId']").val();
	var contractId = $("input[id='gdt_ledgerPlan_conInfo.contractId']").val();
	var url = "GDEBIT@gdt_ledgerPlan4Repay.sf?m=a&contractId=" + contractId 
			+ "&planId=" + planId ;
	openwin(url, '还款计划', 1100, 500);
}

//增加GridUnit行
function smartForm_add(obj) {
	try {
		var names = obj.name.split('.');
		var unitname = names[0];
		return nstc.sf.addRow(unitname, "tableCopy_" + unitname);
	} catch (e) {

	}
	try{
		var frameId = window.frameElement && window.frameElement.id || '';
		if(window.parent != window)
			window.parent.smartForm_iFrameHeight(frameId);
	}catch(e){}
}

//点击确定操作
function smartForm_confirm_true(){
	var objbut = top.Layer.getWin().document.getElementById("gdt_fetchMoneyReg_qry.refresh");
	var objbtn = top.Layer.getWin().document.getElementById("gdt_withdrawalsApply_qry.refresh");
	if(objbtn){
		smartForm_doRefresh(objbtn);
		windowClose();
	}
	if(objbut){
		objbut.click();
		windowClose();
	}
}
function smartForm_confirm(msg) {
	alert(msg);
	smartForm_confirm_true();
}
/**
 * 保存之后，点击取消按钮触发事件
 */
function smartForm_confirm_false(){
	var nstc_id= top.Layer.getWin().NSTC_LAYER_ID;
	window.NSTC_LAYER_ID = nstc_id;
	var objbut = top.Layer.getWin().document.getElementById("gdt_fetchMoneyReg_qry.refresh");;
	var url = top.Layer.getWin().document.URL;
	if(objbut){
		objbut.click();
	}
	setTimeout(function(){
		top.Layer.getWin().NSTC_LAYER_ID = nstc_id;
	},2000);
}
//清空数据
function clearAssBankInfo(obj) {
	var data = {};
	data.assBankId = '';
	data.assBankName = obj.value;
	data.bankNo = '';
	data.bankName = '';

	my_function(data, obj);
}
/**
 * 下拉表格框的实现
 */
/*function setPro(data, obj) {
	var innerFlag = data.innerFlag;
	var datas = data.datas;
	var length = datas.length;
	var divEle = document.getElementById(SmartPage_DropTextTable.DropDivId);
	var texts="",values="";
	if (length == 1 && $.trim(obj.value) == datas[0].assBankName) {//只有一条数据
		if (innerFlag == 1) {//境外金融合作网点
			setAssBankOut(datas[0], obj);
		} else {//合作金融网点
			my_function(datas[0], obj);
		}
	}
	$(divEle).find("table tbody tr").each(function(i, ele){
		$(ele).click(function() {
			if (innerFlag == 1) {//境外金融合作网点
				setAssBankOut(datas[i], obj);
			} else {//合作金融网点
				my_function(datas[i], obj);
			}
		});
	});
}*/
function setPro(data, obj){
	var datas = data.datas;
	var innerFlag = data.innerFlag;
	var length = datas.length;
	var divEle = document.getElementById(SmartPage_DropTextTable.DropDivId);
	var childNodes1=divEle.childNodes;
	var childNodes2=childNodes1[0].childNodes;
	var childNodes3=childNodes2[1].childNodes;
	if (length == 1 && $.trim(obj.value) == datas[0].assBankName) {//只有一条数据
		if (innerFlag == 1) {//境外金融合作网点
			setAssBankOut(datas[0], obj);
		} else {//合作金融网点
			my_function(datas[0], obj);
		}
	}
	$(childNodes3).each(function(i, ele) {
		$(ele).click(function() {
			if (innerFlag == 1) {//境外金融合作网点
				setAssBankOut(datas[i], obj);
			} else {//合作金融网点
				my_function(datas[i], obj);
			}
		});
	});
}
/**
 * 合作金融网点
 */
function my_function(data, obj) {
	var bussVariety = $("[id$='.bussVariety']").val();
	var tr = nstc.sf.findParent(obj, 'tr');
	var rowIndex = tr.rowIndex - 1;
	
	data.bussVariety = bussVariety;
	data.rowIndex = rowIndex;
	setAssBank(data);
}

//选择 -- 金融合作网点
function setAssBank(obj){
	var assBankId= obj.assBankId;
	var assBankName= obj.assBankName;
	$("input[id$='_f.assBankName']").val(assBankName);
	$("input[id$='_f.assBankId']").val(assBankId);
}
//选择提款计划
function selectLedgerPlan() {
	var contractId = $("input[id$='.contractId']").val();
	if (contractId == '') {
		alert("请选择融资合同");
		return;
	}
	var currencyNo = $("select[id$='.currencyNo']").val();
	var assBankId = $("select[id$='.assBankId']").val();
	
	//债券发行不需要传金融机构查询条件
	var bussVariety = $("select[id$='_con.bussVariety']").val();
	if (bussVariety == 'CLMS02') {
		assBankId = '';
	}
	
	//票据贴现的发生额类型是收款，0是融入，5是收款，其他默认是融入
	var contexecType = 0;
	if (bussVariety == 'CLMS11') {
		contexecType = 5;
	}
	
	var url = "GDEBIT@gdt_showLedgerPlan.sf?m=v&contractId=" + contractId + "&currencyNo=" + currencyNo + "&contexecType="+contexecType+"&assBankId=" + assBankId;
	openwin(url, '提款计划列表', 1000, 500);
}

function changeRateAdjustType(obj) {
	var m = document.getElementById('m').value;
	var rateAdjustFrequency = $("[id$='_f.rateAdjustFrequency']");//利率调整频度
	var rateEffectiveDayType = $("[id$='_f.rateEffectiveDayType']");//利率调整首次生效日类型
	var floatType = $("[id$='_f.floatType']");//利率浮动方式
	var floatValue = $("[id$='_f.floatValue']");//利率浮动幅度
	var baseRate = $("[id$='_f.baseRate']");//基准利率
	var rate = $("[id$='_f.executeRate']");//年利率
	var id = obj.id;
	
	//利率调整频度：1, "固定利率";2, "固定期限调整";3, "手动调整";4, "即期调整"
	var rateAdjustType = $(obj).val();
	if (rateAdjustType == '2') {//2固定期限调整
		rateAdjustFrequency.attr('validate', 'require|').show().parent().show();
		if (rateAdjustFrequency.val() == '') {
			rateAdjustFrequency.attr('value','2');//按季
		}
	} else {
		$(rateAdjustFrequency).attr('value','').removeAttr('validate').hide().parent().hide();
	}

	if (rateAdjustType == '1') {//固定利率
		//基准利率、利率浮动方式、利率浮动幅度均不可编辑，只有年利率可以编辑
		baseRate.val('').removeAttr('validate').parent().hide();
		/*floatType.val('').removeAttr('validate').hide().parent().hide();*/
		floatType.attr('value','').removeAttr('validate').hide().parent().hide();
		floatValue.val('').removeAttr('validate').hide().parent().hide();
		rate.attr('validate', 'require|').removeAttr('readonly');
		//查询基准利率
		queryLoanRateForApply(rateAdjustType);
		
	} else {
		//利率浮动方式、利率浮动幅度
		if(isFirstLoad == 1){
			if(lastRateAdjustType == '1'){
				var floatType_ = $("[id$='_f.floatType_']").val();
				var floatValue_ = $("[id$='_f.floatValue_']").val();
				$("[id$='_f.floatType']").val(floatType_);
				$("[id$='_f.floatValue']").val(floatValue_);
			}
		}

		var floatTypeVal = floatType.val();
		if (floatTypeVal == '') {
			floatTypeVal = '2';//不变
		}
		/*floatType.val(floatTypeVal).attr('validate', 'require|').show().parent().show();*/
		floatType.attr('value',floatTypeVal).attr('validate', 'require|').show().parent().show();
		if (floatType.val() == '' || floatType.val() == '2') {//不变
			floatValue.val('').removeAttr('validate').hide().parent().hide();
		} else {
			floatValue.val(FormatMoney(floatValue.val(), 2)).attr('validate', 'require|').show().parent().show();
		}
				//基准利率
		baseRate.attr('validate', 'require|').parent().show();
		rate.attr('validate', 'require|').attr('readonly','readonly');
		//查询基准利率
		queryLoanRateForApply(rateAdjustType);
	}
	lastRateAdjustType = rateAdjustType;
	//利率调整首次生效日【融资申请页面无】
	if (rateEffectiveDayType.val() == undefined) {//融资申请
		return;
	}
	if (rateAdjustType == '2') {//固定期限调整
		var rateEffectiveDayVal = rateEffectiveDayType.val();
		if (rateEffectiveDayVal == '') {
			rateEffectiveDayVal = '1';//提款日对应日期
		}
		rateEffectiveDayType.attr('value',rateEffectiveDayVal).attr('validate', 'require|').show().parent().show();
	} else {
		rateEffectiveDayType.attr('value','').removeAttr('validate').hide().parent().hide();
	}
	
	changeRateEffectiveDay(rateEffectiveDayType[0]);
}

//修改利率调整生效日
function changeRateEffectiveDay(obj) {
	var rateEffectiveDay = obj.value;
	var tr = $(obj).parents("tr").first();
	var rateEffectiveDateObj = tr.find("input[id$='.rateEffectiveDay']");
	if (rateEffectiveDay == '2') {//自定义开始日期
		rateEffectiveDateObj.attr('validate', 'require|').show();
	} else {
		rateEffectiveDateObj.val('').removeAttr('validate').hide();
	}
}
//控制利率浮动方式输入框展示
function showFloatVal(obj){
	
	//获取浮动方式
	var tr = nstc.sf.findParent(obj, "TR");
	var floatType = obj.value;
	var floatValueObj = $(tr).find('input[id$=.floatValue]')[0];
	var floatValue = $(tr).find('input[id$=.floatValue]').val();
	var baseRate = $('input[id$=.baseRate]').val();
	if(floatType == undefined || floatType == ""){
		alert("利率浮动方式不能为空!");
	}else if(floatType == '2'){
		//隐藏输入框    
		$(floatValueObj).hide().parent().hide();
		floatValueObj.value = '';
	}else{
		//显示输入框
		$(floatValueObj).show().parent().show();
	}
	var rate = countRate(baseRate,floatType,floatValue);
	
	if(parseFloat(rate) < parseFloat(0.0)){
		rate = '';
		alert("利率值不合法!利率小于0");
	}
	if(parseFloat(rate) > parseFloat(100.0)){
		rate = '';
		alert("利率值不合法!利率大于100");
	}
	
	$('input[id$=.executeRate]').val(FormatNumber(rate,6));
}
//校验基本利率info
function checkInfoBaseRate(obj){
	var rate=$(obj);
	if(rate.val() !=''){
		if(100.0-parseFloat(rate.val().excludeNotNumericDot())<0){
			alert("利率值不能超过100");
			rate.val('');
			return;
		}
	}
	
	var floatType = $("select[id$='.floatType']").val();
	var rate = $("input[id$='.executeRate']").val();
	var floatValue = $("input[id$='.floatValue']").val();
	var baseRate = $("input[id$='.baseRate']").val();
	rate = countRate(baseRate,floatType,floatValue);
	
	if(parseFloat(rate) < parseFloat(0.0)){
		rate = '';
		alert("利率值不合法!利率小于0");
		$(obj).val("");
	}
	if(parseFloat(rate) > parseFloat(100.0)){
		rate = '';
		alert("利率值不合法!利率大于100");
		$(obj).val("");
	}
	$("input[id$='.executeRate']").val(FormatMoney0(rate,6));
}
/**
 * 计算利率
*/
function checkFloatValue(obj,length){
	obj.value =  FormatNumber(obj.value,2);
	
	showFloatVal($("select[id$='.floatType']")[0]);
	
	doCheckFloatValue(obj,length);
}
function countRate(baseRate,floatType,floatValue){
	var rate = '';
	if(baseRate=='' || baseRate == undefined || baseRate == null){
		return rate;
	}
	
	if(floatType != 2){
		if(floatValue=='' || floatValue == undefined || floatValue == null){
			return rate;
		}
	}else{
		rate = baseRate;
	}
	
	baseRate = parseFloat(baseRate);
	floatValue = parseFloat(floatValue);
	
	//上浮
	if(floatType==0){
		rate = FormatNumber(baseRate*(1+floatValue*1/100), 6);
	//下浮
	}else if(floatType==1) {
		rate = FormatNumber(baseRate*(1-floatValue*1/100), 6);
	//不变
	}else if(floatType==3) {
		rate = FormatNumber(baseRate+(floatValue*0.01), 6);
	//减点             
	}else if(floatType==4){
		rate = FormatNumber(baseRate-(floatValue*0.01), 6);
	}
	rate = FormatNumber(rate,6)
	return rate;
}
//根据付息方式显示付息日等信息
function showPayInterestOther(obj) {
	var payInterestType = obj.value;
	var payInterestTypeOther;
	var interestDayObj;
	
	interestDayObj = $("select[id$='payInterestDateType']");
	payInterestTypeOther = $("input[id$='ypeOther']");
	//付息方式（其他）
	if (payInterestType == '7') {//其他
		payInterestTypeOther.attr('validate', 'require|').show();
	} else {
		payInterestTypeOther.val('').removeAttr('validate').hide();
	}
	//如果是融资申请：return
	if (interestDayObj.val() == undefined) {//融资申请
		return;
	}
	//付息日
	if (payInterestType == '1' || payInterestType == '7' || payInterestType == '6'|| payInterestType == '11') {//1：一次付清；7：其他
		interestDayObj.val('').removeAttr('validate').hide();
	} else {
		interestDayObj.attr('validate', 'require|').show();
		
	}
	//设置付息日期
	setPayInterestDay(interestDayObj[0]);
}
//显示\隐藏付息日期
function setPayInterestDay(obj) {
	var interestDay = obj.value;
	var tr = $(obj).parents("tr").first();
	var interestDateObj = tr.find("input[id$='.payInterestDate']");
	
	if (interestDay == '2') {//自定义开始日期
		interestDateObj.attr('validate', 'require|').parent().show();
	} else {
		interestDateObj.val('').removeAttr('validate').parent().hide();
	}
}
//还本方式
function setRepaymentInfo(obj) {
	var repaymentType = obj.value;
	var id = obj.id;
	var repaymentFrequencyObj;
	var repaymentDateTypeObj;
	
	repaymentFrequencyObj = $("[id$='rePaymentTypeFrequency']");
	repaymentDateTypeObj = $("[id$='rePaymentDateType']");
	
	//融资申请：return
	if (repaymentDateTypeObj.val() == undefined) {
		return;
	}
	
	if (repaymentType == '2') {//分次定额
		//repaymentFrequencyObj.attr('validate', 'require|').show();
		repaymentFrequencyObj.show().attr('validate', 'require|').parent().show();
		if (repaymentFrequencyObj.val() == '') {
			//repaymentFrequencyObj.val('2');//季
			repaymentFrequencyObj.attr('value','2');
		}
		//repaymentDateTypeObj.attr('validate', 'require|').show();
		repaymentDateTypeObj.show().attr('validate', 'require|').parent().show();
		if (repaymentDateTypeObj.val() == '') {
			//repaymentDateTypeObj.val('1');//提款日对应日期
			repaymentDateTypeObj.attr('value','1');
		}
	} else {
		repaymentFrequencyObj.val('').removeAttr('validate').hide();
		repaymentDateTypeObj.val('').removeAttr('validate').hide();
	}
	
	//
	changeRepaymentDateType(repaymentDateTypeObj[0]);
}

//还本日期
function changeRepaymentDateType(obj) {
	var repaymentDateType = obj.value;
	var tr = $(obj).parents("tr").first();
	var repaymentDateObj = tr.find("input[id$='rePaymentDate']");
	if (repaymentDateType == '2') {//自定义开始日期
		//repaymentDateObj.attr('validate', 'require|').show();
		repaymentDateObj.show().attr('validate', 'require|').parent().show();
	} else {
		repaymentDateObj.val('').removeAttr('validate').hide();
	}
}
//校验日期必须在
function checkDateAfterContractDate(obj) {
	var date = obj.value;
	var contractDate = $("input[id$='contractDate']").val();
	if (date == '' || contractDate == '') {
		return true;
	}
	
	var alt = obj.alt;
	if(!compareDate(contractDate, date, alt + '必须在签约日期之后')){
		obj.value = '';
		return false;
	}
	return true;
}
/**
 * 设置融资合同金额相关信息
 * 
 */
function onchangCurrency(){
	
	$("input[id$='associateNo']").val('');
	var bussVariety = $("select[id$='bussVariety']").val();
	var currencyNo = $("select[id$='currencyNo']").val();
	var assBankId = $("select[id$='assBankId']").val();
	if(bussVariety=='CLMS07'){
		setContractAmt(currencyNo,'');
	}else{
		setContractAmt(currencyNo,assBankId);
	}
	//calBaseRate();
	//showIsLiborCheckBoxForFetch();
}
function onchangeAssBank(){
	$("input[id$='associateNo']").val('');
	var bussVariety = $("select[id$='bussVariety']").val()
	var currencyNo = $("select[id$='currencyNo']").val()
	var assBankId = $("select[id$='assBankId']").val();
	if(bussVariety=='CLMS07'){
		setContractAmt('',assBankId);
	}else{
		setContractAmt(currencyNo,assBankId);
	}
	
}
function setContractAmt(currencyNo,assBankId) {
	
	var contractId = $("input[id$='contractId']").val();
	var dueDate = $("input[id$='dueDate']").val();
	$.ajax({
		type: 'POST',
		  url: "GDEBIT@QueryContractAmtBusiness.sf",
		  async : false,
		  data: {'contractId':contractId,"currencyNo":currencyNo,"assBankId":assBankId},
		  dataType:'json',
		  success: function(data) {
			 if(data != null){
				 var bussVariety = $("select[id$='_con.bussVariety']").val();
				 
				 if(flag==1){
					 $("select[id$='assBankId']").val(data[0].assBankIdes[0].value) 
					 $("select[id$='currencyNo']").val(data[0].currencyNoes[0].value)
				 }
				 var result = data[0].result;
				 
				 if(bussVariety == 'CLMS02' || bussVariety == 'CLMS26' || bussVariety == 'CLMS28' || bussVariety == 'CLMS30'){
					 initFinanceTerms(result);
					 return;
				 }
				 //合作金融机构
				 $("input[id$='bankNo']").val(result.bankNo);
				 //利率调整方式
				/* $("select[id$='rateAdjustType']").val(result.rateAdjustType);*/
				 $("select[id$='rateAdjustType']").attr('value',result.rateAdjustType);
				 //基准利率
				 $("input[id$='_f.baseRate']").val(FormatMoney0(result.baseRate,6));
				 //合同利率
				 $("input[id$='.executeRate']").val(FormatMoney0(result.rate,6));
				 //利率浮动方式
				 /*$("select[id$='floatType']").val(result.floatType);*/
				 $("select[id$='floatType']").attr('value',result.floatType);
				 //利率浮动值
				 $("input[id$='floatValue']").val(result.floatValue);
				 //利率调整首次生效日类型
				 //$("select[id$='rateEffectiveDayType']").val(result.rateEffectiveDay);
				 $("select[id$='rateEffectiveDayType']").attr('value',result.rateEffectiveDay);
				 //利率调整首次生效日
				 $("input[id$='rateEffectiveDay']").val(result.rateEffectiveDate);
				 //利率调整频率
				 /*$("select[id$='rateAdjustFrequency']").val(result.rateAdjustFrequency);*/
				 $("select[id$='rateAdjustFrequency']").attr('value',result.rateAdjustFrequency);
				 //付息方式
				 /*$("select[id$='payInterestType']").val(result.payInterestType);*/
				 $("select[id$='payInterestType']").attr('value',result.payInterestType);
				 //付息方式其他
				 $("input[id$='payInterestTypeOther']").val(result.payInterestTypeOther);
				 //付息日期类型
				/* $("select[id$='payInterestDateType']").val(result.payInterestDay);*/
				 $("select[id$='payInterestDateType']").attr('value',result.payInterestDay);
				 //付息日期
				 $("input[id$='payInterestDate']").val(result.payInterestDate);
				 //还本方式
				 //$("select[id$='rePaymentType']").val(result.repaymentType);
				 $("select[id$='rePaymentType']").attr('value',result.repaymentType);
				 //还本方式频率
				/* $("select[id$='rePaymentTypeFrequency']").val(result.repaymentFrequency);*/
				 $("select[id$='rePaymentTypeFrequency']").attr('value',result.repaymentFrequency);
				 //还本日期类型
				 /*$("select[id$='rePaymentDateType']").val(result.repaymentDateType);*/
				 $("select[id$='rePaymentDateType']").attr('value',result.repaymentDateType);
				 //还本日期
				 $("input[id$='rePaymentDate']").val(result.repaymentDate);
				 //合同金额
				 $("input[id$='arriAcntAmount']").val(FormatMoney0(result.amount,2));
				 $("input[id$='hideContractAmt']").val(result.amount);
				 
				 //$("select[id$='isLibor']").val(result.isLibor);
				 $("select[id$='isLibor']").attr('value',result.isLibor);
				 /*$("select[id$='rateTermKind']").val(result.rateTermKind);*/
				 $("select[id$='rateTermKind']").attr('value',result.rateTermKind);
				 setRateKindSelectOptionsForFetch(result.rateTermKind);
				//利率调整方式
				changeRateAdjustType($("[id$='_f.rateAdjustType']")[0]);
				
				//付息方式
				showPayInterestOther($("[id$='_f.payInterestType']")[0]);
				
				//还本方式
				setRepaymentInfo($("[id$='_f.rePaymentType']")[0]);
				
				//付息日期
				setPayInterestDay($("[id$='payInterestDateType']")[0]);
				
				// 计算执行利率
				if (result.rateAdjustType == '1') {
					//合同利率
					$("input[id$='.executeRate']").val(result.rate);
				} else {
					checkInfoBaseRate($("[id$='baseRate']")[0]);
				}
				//setRateKindSelectOptionsForFetch(result.rateTermKind);
				initFinanceTerms(result);
			 }
		  }
	});
}
/**
 * 设置融入期限和单位和到期日
 * @param result
 */
function initFinanceTerms(result) {
	
	/**
	 * 设置融入期限
	 */
	var bussVariety = $("select[id$='_con.bussVariety']").val();
	if(bussVariety=='CLMS02'){
		//var termDay = DateCompare(startDate,endDate);
	/*	var idVal = $("input[id$='_f.financeTerms']").attr("id");
	    var pageCode = idVal.replace(/.financeTerms/,"");
		var html  = "<input id='" + pageCode + ".financeTerms' name='" + pageCode + ".financeTerms' type='hidden' value='"+result.termDay+"'/>"
		
		var typeHtml  = "<input id='" + pageCode + ".financeUnit' name='" + pageCode + ".financeUnit' type='hidden' value='"+3+"'/>"
		$("[id$='.financeUnit']").parent().remove();
		$('input[id$=.financeTerms]').parent().html(result.termdayStr+ html+typeHtml);*/
		$("select[id$='financeUnit']").attr('value',3);
		 $("input[id$='financeTerms']").val(parseInt(result.termDay)+parseInt(result.termDaySuffix));
		 setDueDateHtml(result.dueDate);
	}else if(bussVariety=='CLMS28'){
		$("select[id$='financeUnit']").attr('value',1);
		 $("input[id$='financeTerms']").val(result.termDay);
		 setDueDateHtml(result.dueDate);
	}else{
		 $("select[id$='financeUnit']").attr('value',result.financeUnit);
		 $("input[id$='financeTerms']").val(result.termDay);
		 
		 var pageCode = $("input[id='pageCode']").val();
			
		 if (pageCode == 'gdt_addGdebitFetchApply') {
			 $("input[id$='hopeFetchDate']").val(result.arriAcntDate);
		 } else if (pageCode == 'gdt_addFetchMoneyReg') {
			 $("input[id$='arriAcntDate']").val(result.arriAcntDate);
		 }
		 
		 setDueDateHtml(result.dueDate);
	}
}
/**
 * 到期日html重置
 * @param dueDate
 */
function setDueDateHtml(dueDate) {
	if(dueDate==null){
		dueDate = '';
	}
	$("input[id$='dueDate']").val(dueDate);
	var dueDateParentTd = $("input[id$='dueDate']").parents("td").first();
	var dueDateOuterHtml = $("input[id$='dueDate']")[0].outerHTML;
	dueDateParentTd.html("<span>" + dueDate + dueDateOuterHtml + "</span>");
}
function valideFetchDate() {
	var startDate = $("input[id$='.executeRate']");
	var endDate;
}
/**
 * 设置融资合同金额相关信息
 * 
 */
function autoCreateFetchNo() {
	$.ajax({
		type: 'POST',
		  url: "GDEBIT@QuerySerialNumberBusiness.sf",
		  async : false,
		  data: {'code':'TK'},
		  dataType:'text',
		  success: function(data) {
			 $("input[id$='.fetchNo']").val(data);
		  }
	});
}
/**
 * 融资基准利率（融资申请）
*/
function queryLoanRateForApply(rateAdjustType) {
	if (rateAdjustType == '1'/* || rateAdjustType == '3'*/) {//1固定利率;3手动调整
		var assBankId = $("select[id$='_f.assBankId']").val();
		var currencyNo = $("select[id$='_f.currencyNo']").val();
		var contractId = $("input[id$='_con.contractId']").val();
		
		$.ajax({
			type: 'POST',
			url: "GDEBIT@AjaxQueryRateAction.sf",
			async : false,
			data: {'contractId':contractId,"currencyNo":currencyNo,"assBankId":assBankId},
			dataType:'json',
			success: function(data) {
				if(data != null){
					var result = data[0].result;
					$("input[id$='.executeRate']").val(FormatMoney0(result.rate,6));
					if (rateAdjustType == '3') {
						//基准利率
						$("input[id$='_f.baseRate']").val(FormatMoney0(result.baseRate,6));
						//$("select[id$='_f.isLibor']").val(result.isLibor);
						//$("select[id$='_f.rateTermKind']").val(result.rateTermKind);
						$("select[id$='_f.isLibor']").attr('value',result.isLibor);
						$("select[id$='_f.rateTermKind']").attr('value',result.rateTermKind);
					}
					/*if(rateAdjustType=='1'){//固定利率
						//合同利率
						$("input[id$='.executeRate']").val(FormatMoney0(result.rate,6));	
					}else{
						//基准利率
						$("input[id$='_f.baseRate']").val(FormatMoney0(result.baseRate,6));
					}*/
				}
			}
		});
	} else {//2固定期限调整;4即期调整
		calBaseRate();
	}
}

function calBaseRate(obj) {
	var rateAdjustType = $("select[id$='_f.rateAdjustType']").val();
	if (rateAdjustType == '2' || rateAdjustType == '4'
		|| rateAdjustType == '3'	
	) {//2固定期限调整;4即期调整
		$("input[id$='_f.baseRate']").val('');
		var bankNo = $("input[id$='_f.bankNo']").val();
		var currencyNo = $("select[id$='_f.currencyNo']").val();
		var contractId = $("input[id$='_con.contractId']").val();
		var startDate = $("input[id$='_f.arriAcntDate']").val();
		var endDate = $("input[id$='_f.dueDate']").val();
		
		var isLibor = $("select[id$='_f.isLibor']");
		var rateTermKinds= $("select[id$='_f.rateTermKind']");
		var rateTermKind= $("select[id$='.rateTermKind']").val();
		if(obj==1){
			rateTermKind="";
		}
		//var termDayType = $("[id$='.financeTerms']").val();
		var currencyName = $("select[id$='_f.currencyNo'] option:selected").text();
		if(startDate == undefined || startDate == '' ){
			startDate = $("input[id$='_f.hopeFetchDate']").val();
		}
		var termDay = $("input[id$='.financeTerms']").val();
		var termType = $("select[id$='.financeUnit']").val();
		
		if (termDay == '' || termType == '') {
			return;
		}
		if(currencyNo != 'CNY' && (bankNo == '' || bankNo == undefined)) {
		/*	if(isLibor.val()==1){
				//changeLiborRate(obj);
				var liborRate;
				$.ajax({
					type: 'POST',
					url: "GDEBIT@QueryLiborRateAction.sf",
					async : false,
					data: {'termDay':termDay, 'termDayType':termDayType, 'startDate':startDate,'currencyNo':currencyNo,'rateTermKind':rateTermKind},
					dataType:'json',
					success: function(data) {
						if (data == '') {
							alert("请先维护" + startDate + "日之前的Libor利率【" + currencyName +"】");
							return;
						} else {
							var active = data[0].active;
							liborRate = data[0].liborRate;
							var rateKind = data[0].rateKind;
							var rateTermKindTemp = data[0].rateTermKind;
							if(active == '0') {
								alert("请先维护" + startDate + "日之前生效的Libor准利率【" + rateKind +currencyName+"】");
								return;
							} else if (active == '1') {
								alert(data[0].msg);
							}else {
								rateTermKinds.val(rateTermKindTemp);
							}
						}
					}
				});
				$("input[id$='_f.baseRate']").val(FormatNumber(liborRate, 6)).change();
				if (rateAdjustType == '2' || rateAdjustType == '4'
						
				){
					showFloatVal($("select[id$='floatType']")[0]);
				}
				
				
			}
			else{*/
				return;
			/*}*/
		}
		if(startDate != undefined && startDate != '' ){
			if(isLibor.val()!=1){
			$.ajax({
				type: 'POST',
				url: "GDEBIT@QueryLoanRateAction.sf",
				async : false,
				data: {'startDate':startDate, 'currencyNo':currencyNo, 'bankNo':bankNo,'termDay':termDay,'termType':termType
					, 'bankNo':bankNo,'rateTermKind':rateTermKind},
				dataType:'json',
				success: function(data) {
					var currencyName = $("select[id$='currencyNo'] option:selected").text();
					if (data == '') {
						alert("请先维护" + startDate + "日之前生效的融资基准利率【" + rateKindName + "/" + currencyName + "】");
						return;
					} else {
						var active = data[0].active;
						var rateKindName = data[0].rateKindName;
						var rateValue = data[0].rateValue;
						var rateTermKindTemp = data[0].rateTermKind;
						/*rateTermKinds.val(rateTermKindTemp);*/
						rateTermKinds.attr('value',rateTermKindTemp);
						if(active == '0') {
							alert("请先维护" + startDate + "日之前生效的融资基准利率【" + rateKindName + "/" + currencyName + "】");
							return;
						} else if (active == '1') {
							alert(data[0].msg);
							return;
						}else {
							$("input[id$='_f.baseRate']").val(FormatNumber(rateValue, 6)).change();
							/*showFloatVal($("select[id$='floatType']")[0]);*/
							/*if (rateAdjustType == '2' || rateAdjustType == '4'	){*/
								showFloatVal($("select[id$='floatType']")[0]);
							/*}*/
						}
					}
				}
			});
			}else if(isLibor.val()==1){
				var liborRate;
				$.ajax({
					type: 'POST',
					url: "GDEBIT@QueryLiborRateAction.sf",
					async : false,
					data: {'termDay':termDay, 'termDayType':termType, 'startDate':startDate,'currencyNo':currencyNo,'rateTermKind':rateTermKind},
					dataType:'json',
					success: function(data) {
						if (data == '') {
							alert("请先维护" + startDate + "日之前的Libor利率【" + currencyName +"】");
							return;
						} else {
							var active = data[0].active;
							liborRate = data[0].liborRate;
							var rateKind = data[0].rateKind;
							var rateTermKindTemp= data[0].rateTermKind;
							/*rateTermKinds.val(rateTermKindTemp);*/
							rateTermKinds.attr('value',rateTermKindTemp);
							if(active == '0') {
								alert("请先维护" + startDate + "日之前生效的Libor准利率【" + rateKind +currencyName+"】");
								return;
							} else if (active == '1') {
								alert(data[0].msg);
							}else {
								
							}
						}
					}
				});
				if(liborRate!=null){
					$("input[id$='_f.baseRate']").val(FormatNumber(liborRate, 6)).change();
				}else{
					$("input[id$='_f.baseRate']").val("").change();
				}
				/*if (rateAdjustType == '2' || rateAdjustType == '4'){*/
					showFloatVal($("select[id$='floatType']")[0]);
				/*}*/
				
			}
		}
	}
}

/**
 * @param arriAcntDate:提款到账日
 * 
 * 校验付息日期和还本日期
 */
function valiPayInterestDate(arriAcntDate) {
	var today = new Date();
	if (dateDiff(today.shortDate(), arriAcntDate) > 0) {
		alert("提款日不能大于当前系统时间");
		return false;
	}
	//提款日必须在合同开始日和结束日之间
	var startDate = $('input[id$=.startDate]').val();
	var endDate = $('input[id$=.endDate]').val();
	
	var bussVariety = $("select[id$='_con.bussVariety']").val();
	var issueMethod = $("input[id$='_con.issueMethod']").val();
	
	var isValiEndDate = true;
	if (bussVariety == 'CLMS02' && issueMethod == '8') {
		isValiEndDate = false;
	}
	
	if (dateDiff(startDate, arriAcntDate) < 0) {
		alert("提款日必须大于等于合同开始日");
		return false;
	}
	
	if (isValiEndDate) {
		if (dateDiff(endDate, arriAcntDate) > 0) {
			alert("提款日必须小于等于合同结束日");
			return false;
		}
	}
	
	var payInterestDateType = $("select[id$='payInterestDateType']");
	if (payInterestDateType != null && payInterestDateType != undefined) {
		if (payInterestDateType.val() == '2') {
			var payInterestDate = $('input[id$=.payInterestDate]').val();
			if (dateDiff(arriAcntDate, payInterestDate) < 0) {
				alert("付息日期必须大于等于提款日");
				return false;
			}
			
			if (isValiEndDate) {
				if (dateDiff(endDate, payInterestDate) > 0) {
					alert("付息日期必须小于等于合同结束日");
					return false;
				}
			}
			
		}
	}
	
	var rePaymentDateType = $("select[id$='rePaymentDateType']");
	if (rePaymentDateType != null && rePaymentDateType != undefined) {
		if (rePaymentDateType.val() == '2') {
			var rePaymentDate = $('input[id$=.rePaymentDate]').val();
			if (dateDiff(arriAcntDate, rePaymentDate) < 0) {
				alert("还本日期必须大于等于提款日");
				return false;
			}
			
			if (isValiEndDate) {
				if (dateDiff(endDate, rePaymentDate) > 0) {
					alert("还本日期必须小于等于合同结束日");
					return false;
				}
			}
			
		}
	}
	return true;
}
/**
 * @param fetchtAmount:校验提款到账金额
 * 
 */
function valiFetchAmount(fetchtAmount) {
	var assBankId = $("select[id$='_f.assBankId']").val();
	var currencyNo = $("select[id$='_f.currencyNo']").val();
	var list = $("input[id$='amountId']");//:visible
	for(var i = 0; i < list.length; i++) {
		var tr_i = list.eq(i).parents("tr").first();
		var assBankId_i = tr_i.find("input[id$='assBankId']").val();
		var currencyNo_i = tr_i.find("input[id$='currencyNo']").val();
		var fetchRegisterBalance_i = tr_i.find("input[id$='fetchRegisterBalance']").val().excludeNotNumericDot();
		
		if (fetchRegisterBalance_i != '') {
			if (fetchtAmount!=""&&!validatePositiveNumber(fetchtAmount)) {
				alert("提款金额必须大于0");
				$("input[id$='fetchtAmount']").val("")
				return;
			    }
			if (assBankId_i == assBankId && currencyNo_i == currencyNo) {
				if (FloatSub(fetchRegisterBalance_i, fetchtAmount) < 0) {
					alert('提款金额应该小于等于剩余未提款金额');
					return false;
				}
			}
		}
		
	}
	return true;
}
/**
 * 选择收款明细
 */
function showRec(){
	var url="GDEBIT@gdt_selectRecDetail.sf";
	openwin(url, '收款明细', 1000,600);
}
function setRecDetail(obj) {
	if (obj != null) {
		$("input[id$='_f.recordId']").val(obj.recId);
	}
}

function setDueDate(){
	var obj = $("input[id$='financeTerms']")[0];
	var pageCode = $("input[id='pageCode']").val();
	
	var startDate;
	if (pageCode == 'gdt_addGdebitFetchApply') {
		startDate = $("input[id$='hopeFetchDate']").val();
	} else if (pageCode == 'gdt_addFetchMoneyReg') {
		startDate = $("input[id$='arriAcntDate']").val();
	}
	
	var financeTerms = $("input[id$='financeTerms']").val();
	var financeUnit = $("select[id$='financeUnit']").val();
	var reg = /^[1-9]\d*$/;
	if(reg.test(obj.value) || obj.value == ''){
		$.ajax({
			type: 'POST',
			  url: "GDEBIT@CalculateDueDateBusiness.sf",
			  async : false,
			  data: {"startDate":startDate,"financeTerms":financeTerms,"financeUnit":financeUnit},
			  dataType:'json',
			  success: function(data) {
				 if(data != null){
					 setDueDateHtml(data[0].result);
				 }
			  }
		});
	}else{
		alert("请输入数字！");
		obj.value = "";
	}
	calBaseRate(1);
}
/**
 * 校验利率
 * @param obj
 * @returns {Boolean}
 */
function checkExecuteRate(obj){
	var rate=$(obj);
	if(rate.val() !=''){
		if(100.0-parseFloat(rate.val().excludeNotNumericDot())<0){
			alert("利率值不能超过100");
			rate.val('');
			return false;
		}
	}
}
function checkUnderRates(obj){
	var rate=$(obj);
	if(rate.val() !=''){
		if(100.0-parseFloat(rate.val().excludeNotNumericDot())<0){
			alert("承销费率不能超过100");
			rate.val('');
			return false;
		}
	}
}
/**
 * 
 * @param fetchDate 提款日
 * @param dueDate 提款到期日
 * @param contractTermDay 合同期限
 */
function validateFinanceTerms(fetchDate) {
	var bussVariety = $("select[id$='_con.bussVariety']").val();
	var dueDate = $("input[id$='dueDate']").val();
	var contractTermDay = $("input[id$='hidTermDay']").val();
	var pageCode = $("input[id='pageCode']").val();
	var financeUnit=$("[id$='_con.hideTermDayType']").val();
	var contractEndDay=$("input[id$='_con.endDate']").val();
	var fetchStr = "";
	if (pageCode == 'gdt_addGdebitFetchApply') {
		fetchStr = "期望提款日";
	} else if (pageCode == 'gdt_addFetchMoneyReg') {
		fetchStr = "提款到账日期";
	}
	var flag = "true";
	$.ajax({
		type: 'get',
		  url: "GDEBIT@ValidateFetchDueDateBusiness.sf",
		  async : false,
		  data: {"fetchDate":fetchDate,"contractEndDay":contractEndDay,"contractTermDay":contractTermDay,"dueDate":dueDate,"bussVariety":bussVariety,"financeUnit":financeUnit},
		  dataType:'json',
		  success: function(data) {
			 if(data != null){
				 if ("false" == data[0].result) {
					alert("提款到期日不能大于" + fetchStr + "加融资合同期限");
					flag = 'false';
				 }
			 }
		  }
	});
	if (flag == 'true') {
		return true;
	} else {
		return false;
	}
}


function showIsLiborCheckBoxForFetch(obj){
	

	var isLibor;
	var cur;
	var isLiborOption;
	
	//var isLiborCheckBox;

		isLibor = $("select[id$='_f.isLibor']");
		currencyNo = $("[id$='_f.currencyNo']").val();
		isLiborOption= $("select[id$='_f.isLibor'] option");
		isLibor.removeAttr("disabled");
		$("select[id$='_f.isLibor'] option[value='0']").remove(); 

	if(currencyNo=='CNY'){
	//	alert(isLibor.html());
		//isLiborCheckBox.attr('checked',false);
		//isLibor.parent().hide();
		//if(!jsSelectIsExitItem(isLiborOption, 0)){
			/*var varItem = new Option(0, "央行基准");
			isLiborOption.add(varItem);*/
			
		//}
		var isLiborHtml=isLibor.html();
		isLibor.html("<option value='0'>央行基准</option>"+isLiborHtml);
		/*isLibor.val(0);*/
		isLibor.attr('value',0);
		//setLoanRateAllForApply();
		queryRateTermKindForSelectAddFetch(obj)
		isLibor.attr("disabled","disabled");
	}else{
		//isLibor.parent().show();
	/*	isLibor.removeAttr("disabled");
		if(jsSelectIsExitItem(isLiborOption, 0)){
			for (var i = 0; i < isLiborOption.length; i++) {        
	             if (isLiborOption[i].value ==  0) {        
	            	 isLiborOption[i].remove();
	                 break;        
	             }        
	         }      
		}*/
		/*isLibor.val(2);*/
		isLibor.attr('value',2);
		queryRateTermKindForSelectAddFetch(obj)
		
	}
	queryLoanRateForApply(obj);
}

function queryRateTermKindForSelectAddFetch(obj){
	
	var rateKindsType;
	var rateTermKind;

	var isLibor;

		isLibor = $("select[id$='_f.isLibor']");
		rateTermKind = $("select[id$=rateTermKind]")[0];
		var rateTermKindTemp=$("select[id$=rateTermKind]").val();
	if(isLibor.val()==1){
		rateKindsType=1;
	}else{
		rateKindsType=0;
	}
	$.ajax({
		  type: 'POST',
		  url: "GDEBIT@QueryRateKindsForSelectBusiness.sf",
		  async : false,
		  data: {'rateKindsType':rateKindsType},
		  dataType:'json',
		  success: function(data) {
			 // var rateTermKind = $("select[id$=rateTermKind]")[0];
			  rateTermKind.innerHTML = "";
			  rateTermKind[0] = new Option("", "");
			  if (data.length > 0) {
				  for ( var i = 0; i < data.length; i++) {
					  var name = data[i].name;
					  var value = data[i].value;
					  rateTermKind[i+1] = new Option(name, value);
					  /*if(data[i].value == rateTermKind && data[i].value !="" ){*/
					  if(data[i].value == rateTermKindTemp && data[i].value !="" ){
						  /*rateTermKind.value =  rateTermKind;*/
						  $(rateTermKind).attr('value',rateTermKindTemp);
					  }
				  }
			  } else {
				  rateTermKind = new Option("", "");
			  }
		  }
	})
}
function setRateKindSelectOptionsForFetch(rateTermKindTemp){
	
	
	var isLibor;
	var cur;
	var isLiborOption;
	var rateTermKind;
	//var rateTermKindTemp;
	//var isLiborCheckBox;
	
		isLibor = $("select[id$='_f.isLibor']");
		currencyNo = $("[id$='_f.currencyNo']").val();
		isLiborOption= $("select[id$='_f.isLibor'] option");
		isLibor.removeAttr("disabled");
		$("select[id$='_f.isLibor'] option[value='0']").remove(); 
		rateTermKind = $("select[id$=rateTermKind]");
		//rateTermKindTemp=rateTermKind.val();
		

	if(currencyNo=='CNY'){
		var isLiborHtml=isLibor.html();
		isLibor.html("<option value='0'>央行基准</option>"+isLiborHtml);
		/*isLibor.val(0);*/
		isLibor.attr('value',0);
		queryRateTermKindForSelectAddFetch(obj)
		isLibor.attr("disabled","disabled");
	}else{
		queryRateTermKindForSelectAddFetch(obj)
		
	}
	rateTermKind.val(rateTermKindTemp);
}
function isLiborOnChangeForFetch(obj){
	queryRateTermKindForSelectAddFetch(obj);
	calBaseRate();
}
function changePayInterestTypeOption(variety){
	$("[id$='_f.payInterestType'] option[value='11']").remove();
	if(variety=='CLMS35'||variety=='CLMS23'){
		$("[id$='_f.payInterestType']").append("<option value='11'>预扣利息</option>");
	}
}
function checkProFetchAmount(obj){
	var fetchAmount = parseFloat(obj.value.excludeNotNumericDot());
	var tr = nstc.sf.findParent(obj, 'tr');
	var rAmount = $(tr).find("input[id='gdt_addGdebitFetchApply_pro.rAmount']").val();
	rAmount = parseFloat(rAmount.excludeNotNumericDot());
	if(fetchAmount > rAmount){
    	alert("提款金额不可大于剩余未提款金额");
    	obj.value="";
	}
	calProFetchAmount();
}
function calProFetchAmount(){
	var fetchAmountTol;
	$("input[name='gdt_addGdebitFetchApply_pro.fetchAmount']:visible").each(function(index, domObj){
		if(domObj.value != ""){
			//var fetchAmount = parseFloat(domObj.value.excludeNotNumericDot());
			var fetchAmount = parseFloat(domObj.value.excludeNotNumericDot());
			if(fetchAmountTol!=null){
			fetchAmountTol=fetchAmountTol+fetchAmount;
			}else{
				fetchAmountTol=fetchAmount;
			}
		}
	})
	//fetchAmountTol=parseFloat(fetchAmountTol.value.excludeNotNumericDot());
	if(fetchAmountTol!=null){
		$("[id$='.fetchtAmount']").val(FormatMoney(fetchAmountTol,2));
	}else{
		$("[id$='.fetchtAmount']").val("");
	}
}
function checkProArriAcntAmount(obj){
	var fetchAmount = parseFloat(obj.value.excludeNotNumericDot());
	var tr = nstc.sf.findParent(obj, 'tr');
	var rAmount = $(tr).find("input[id='gdt_addFetchMoneyReg_pro.rAmount']").val();
	rAmount = parseFloat(rAmount.excludeNotNumericDot());
	if(fetchAmount > rAmount){
    	alert("提款金额不可大于剩余未提款金额");
    	obj.value="";
	}
	calProArriAcntAmount();
}
function calProArriAcntAmount(){
	var fetchAmountTol;
	$("input[name='gdt_addFetchMoneyReg_pro.fetchAmount']:visible").each(function(index, domObj){
		if(domObj.value != ""){
			//var fetchAmount = parseFloat(domObj.value.excludeNotNumericDot());
			var fetchAmount = parseFloat(domObj.value.excludeNotNumericDot());
			if(fetchAmountTol!=null){
			fetchAmountTol=fetchAmountTol+fetchAmount;
			}else{
				fetchAmountTol=fetchAmount;
			}
		}
	})
	//fetchAmountTol=parseFloat(fetchAmountTol.value.excludeNotNumericDot());
	if(fetchAmountTol!=null){
		$("[id$='.arriAcntAmount']").val(FormatMoney(fetchAmountTol,2));
	}else{
		$("[id$='.arriAcntAmount']").val("");
	}
}