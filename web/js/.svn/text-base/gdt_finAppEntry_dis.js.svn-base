// 融资申请页面 --> 添加/查看/修改

$(function(){
	var m = document.getElementById('m').value;
	
	//动态显示授信品种
	var pageCode = $("input[id='pageCode']").val();
	var bussClass = document.getElementById(pageCode + '_info.bussClass');
	var bussVariety = document.getElementById(pageCode + '_info.bussVariety');
	bussClass.value="CLMS02";
	bussVariety.value="CLMS11";
	if(m=='a')queryBussVariety(bussClass,bussVariety);
	$("select[id$=.bussVariety]").val("CLMS11");
	
	//m=v模式下显示申请日志
	//var div = document.getElementById('div.gdt_financeApplyEntry_log');
	//div.style.display = 'none';
	if(m!=null&&m=='v'){
		//div.style.display = '';
		$("font").text("");
		$('input[id$=".isRediscount"]').attr('disabled','true');
	}
	
	//实现删除附件,页面不刷新   
	var tab = $("input[id='"+pageCode+"_info._applyFiles_del']").prev();
	var tBody = tab.find('tbody');
	//获取tBody下面所有的子节点
	tBody.children().each(function(){
		//获取每个tr下的 第二个 td
		var tdObj = $(this).children('td').eq(1);
		//获取每个tr下的 第二个 td 下 的第二个 a 标签
		var aObj = tdObj.children('a').eq(1);
		var href = $(aObj).attr("href");
		//重置href属性,不让页面跳转
		$(aObj).attr("href","javascript:void(0)");
		//添加点解事件
		aObj.click(function(){
			$.ajax({
				type: 'POST',
				url: href,
				async : false,
				dataType: "text",
				success: function(data) {
					//删除成功,删除这一行 tr
					$(aObj).parent().parent().remove();
				}
		  	});  
		});
	})
});

//保存按钮
function doEntrySaveDis(obj){
	$("[id$=.isApprove]").val("0");
	if(!saveCheckDis()){
		return ;
	}
	
	if(validDiscDate()){
        smartForm_doSave(obj);
    }
}

//提交按钮
function doEntrySubmitDis(obj){
	$("[id$=.isApprove]").val("1");
	if(!saveCheckDis()){
		return ;
	}
	if(validDiscDate()){
        smartForm_doSave(obj);
    }
}

function validDiscDate(){
    var discData = $("input[id$='_info.startDate']").val();
    var disSDateArray = $("input[id$='_bill.startDate']");
    for(var i = 0; i < disSDateArray.length; i++){
        var startDate = disSDateArray[i].value;
        if(DateCompare(discData, startDate) > 0){
            alert("贴现日期不能早于任一出票日期！")
            return false;
        }
    }
    return true;
}

// 提交/保存  之前先进行校验
function saveCheckDis(){
	var pageCode = $("input[id='pageCode']").val();
	var bussVariety = document.getElementById(pageCode + '_info.bussVariety').value;
	if(!doCheckBankIsNull(bussVariety)){
		alert("合作金融网点不存在！");
		return false;
	}
	
	var startDate = $('input[id$=.startDate]').val();
	var endDate = $('input[id$=.endDate]').val();
	//校验日期
	if(!compareDate(startDate, endDate, '贴现日期不能晚于到期日')){
		return false;
	}
	
	//校验合同金额是否存在
	//校验合同金额数据是否存在
	var amount = $("input[id$='_info.amount']").val();
	if(!amount){
		alert("合同金额不能为空!");
		return false;
	}
	var disAmtArray = $("input[id$='_bill.billAmount']");
	if(!disAmtArray || disAmtArray.length < 2){
		alert("票据信息不能为空!");
		return false;
	}
	//校验融资合同 与 担保合同 大行是否相同
	//TA0640取消校验 by 20180719
//	if(!doCheckBank()){
//		alert("融资合同所属大行与授信合同所属大行不一致");
//		return false;
//	}
	var files = $('input[id$=applyFiles_filetext]');
	if(!validateFileForamtBatch(files)){
		alert("系统不允许上传可执行格式的文件");
		return false;
	}
	//贴现率
	var capitalRate = $("input[id$='.capitalRate']").val();
	if (parseFloat(capitalRate) <= 0) {
		alert("贴现率必须大于0");
		return false;
	}
	//授信字段选择了“是”，必须选择授信合同
	if(!checkIsTakeCredit()){
		return false;
	}
	return true;
}

//清空数据
function emptyData(){
	//清空授信数据
	$("table[id=gdt_financeApplyEntry_credit]").find("tbody tr:visible").remove();
	//显示授信div
	$("div[id='div.gdt_financeApplyEntry_credit']").show();
}


//选择 -- 金融合作网点
var lastBankNo = "";
function setAssBank(obj){
	if(lastBankNo == "")lastBankNo = $("input[id$='_info.bankNo']").val();
	if(lastBankNo == "")lastBankNo = obj.bankNo;
	var rowIndex = obj.rowIndex;
	var assBankId= obj.assBankId;
	var assBankName= obj.assBankName;
	var bankNo = obj.bankNo;
	$("input[id$='_info.assBankId']").val(assBankId);
	$("input[id$='_info.assBankName']").val(assBankName);
	//切换合作金融网点大行，清空授信担保信息
	if(lastBankNo !=bankNo){
		emptyData();
		lastBankNo = bankNo;
	}
}

